{"version":3,"file":"static/js/1363.b0a40633.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-60b19604.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/errors-105ad187.browser.esm.js","../node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-e4cc0175.browser.esm.js","../node_modules/@thirdweb-dev/wallets/evm/connectors/wallet-connect-v1/dist/thirdweb-dev-wallets-evm-connectors-wallet-connect-v1.browser.esm.js"],"sourcesContent":["import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\nimport { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    _defineProperty(this, \"id\", void 0);\n    _defineProperty(this, \"name\", void 0);\n    _defineProperty(this, \"chains\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"ready\", void 0);\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-c8ecdc07.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(message);\n    _defineProperty(this, \"cause\", void 0);\n    _defineProperty(this, \"code\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the 1000 <= 4999 range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","function normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, b as _classPrivateFieldGet, a as _classPrivateFieldSet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-c8ecdc07.browser.esm.js';\nimport { w as walletIds } from '../../../../dist/walletIds-1ea97411.browser.esm.js';\nimport { utils, providers } from 'ethers';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-60b19604.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-e4cc0175.browser.esm.js';\nimport { U as UserRejectedRequestError, S as SwitchChainError } from '../../../../dist/errors-105ad187.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\n/**\n * Wallets that support chain switching through WalletConnect\n * - imToken (token.im)\n * - MetaMask (metamask.io)\n * - Rainbow (rainbow.me)\n * - Trust Wallet (trustwallet.com)\n */\n// const switchChainAllowedRegex = /(imtoken|metamask|rainbow|trust wallet)/i;\n\nconst LAST_USED_CHAIN_ID = \"last-used-chain-id\";\nconst LAST_SESSION = \"last-session\";\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _storage = /*#__PURE__*/new WeakMap();\nvar _handleConnected = /*#__PURE__*/new WeakSet();\nvar _removeListeners = /*#__PURE__*/new WeakSet();\nclass WalletConnectV1Connector extends WagmiConnector {\n  constructor(config) {\n    super(config);\n    _classPrivateMethodInitSpec(this, _removeListeners);\n    _classPrivateMethodInitSpec(this, _handleConnected);\n    _defineProperty(this, \"id\", walletIds.walletConnectV1);\n    _defineProperty(this, \"name\", \"WalletConnectV1\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _storage, {\n      writable: true,\n      value: void 0\n    });\n    _defineProperty(this, \"walletName\", void 0);\n    _defineProperty(this, \"onSwitchChain\", () => {\n      this.emit(\"message\", {\n        type: \"switch_chain\"\n      });\n    });\n    _defineProperty(this, \"onDisplayUri\", async (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"display_uri_error\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"display_uri\"\n      });\n    });\n    _defineProperty(this, \"onRequestSent\", (error, payload) => {\n      if (error) {\n        this.emit(\"message\", {\n          data: error,\n          type: \"request\"\n        });\n      }\n      this.emit(\"message\", {\n        data: payload.params[0],\n        type: \"request\"\n      });\n    });\n    _defineProperty(this, \"onMessage\", message => {\n      this.emit(\"message\", message);\n    });\n    _defineProperty(this, \"onAccountsChanged\", accounts => {\n      if (accounts.length === 0) {\n        this.emit(\"disconnect\");\n      } else {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    });\n    _defineProperty(this, \"onChainChanged\", chainId => {\n      const id = normalizeChainId(chainId);\n      const unsupported = this.isChainUnsupported(id);\n      _classPrivateFieldGet(this, _storage).setItem(LAST_USED_CHAIN_ID, String(chainId));\n      this.emit(\"change\", {\n        chain: {\n          id,\n          unsupported\n        }\n      });\n    });\n    _defineProperty(this, \"onDisconnect\", async () => {\n      this.walletName = undefined;\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_USED_CHAIN_ID);\n      _classPrivateFieldGet(this, _storage).removeItem(LAST_SESSION);\n      _classPrivateMethodGet(this, _removeListeners, _removeListeners2).call(this);\n      this.emit(\"disconnect\");\n    });\n    _classPrivateFieldSet(this, _storage, config.storage);\n  }\n  async connect() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    try {\n      let targetChainId = chainId;\n      if (!targetChainId) {\n        const lastUsedChainIdStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_USED_CHAIN_ID);\n        const lastUsedChainId = lastUsedChainIdStr ? parseInt(lastUsedChainIdStr) : undefined;\n        if (lastUsedChainId && !this.isChainUnsupported(lastUsedChainId)) {\n          targetChainId = lastUsedChainId;\n        }\n      }\n      const provider = await this.getProvider({\n        chainId: targetChainId,\n        create: true\n      });\n      this.setupListeners();\n\n      // Defer message to the next tick to ensure wallet connect data (provided by `.enable()`) is available\n      setTimeout(() => this.emit(\"message\", {\n        type: \"connecting\"\n      }), 0);\n      const accounts = await provider.enable();\n      const account = utils.getAddress(accounts[0]);\n      let id = await this.getChainId();\n      let unsupported = this.isChainUnsupported(id);\n\n      // Not all WalletConnect options support programmatic chain switching\n      // Only enable for wallet options that do\n      this.walletName = provider.connector?.peerMeta?.name ?? \"\";\n\n      // switch to target chainId\n      if (chainId) {\n        try {\n          await this.switchChain(chainId);\n          id = chainId;\n          unsupported = this.isChainUnsupported(id);\n        } catch (e) {\n          console.error(`could not switch to desired chain id: ${chainId} `, e);\n        }\n      }\n      _classPrivateMethodGet(this, _handleConnected, _handleConnected2).call(this);\n      this.emit(\"connect\", {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      });\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider: new providers.Web3Provider(provider)\n      };\n    } catch (error) {\n      if (/user closed modal/i.test(error.message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.disconnect();\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = provider.accounts;\n    // return checksum address\n    return utils.getAddress(accounts[0]);\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = normalizeChainId(provider.chainId);\n    return chainId;\n  }\n  async getProvider() {\n    let {\n      chainId,\n      create\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    // Force create new provider\n    if (!_classPrivateFieldGet(this, _provider) || chainId || create) {\n      const rpc = !this.options?.infuraId ? this.chains.reduce((rpc_, chain) => ({\n        ...rpc_,\n        [chain.chainId]: chain.rpc[0]\n      }), {}) : {};\n      const WalletConnectProvider = (await import('../../../../dist/index-42b0f5f5.browser.esm.js')).default;\n      const sessionStr = await _classPrivateFieldGet(this, _storage).getItem(LAST_SESSION);\n      const session = sessionStr ? JSON.parse(sessionStr) : undefined;\n      this.walletName = session?.peerMeta?.name || undefined;\n      _classPrivateFieldSet(this, _provider, new WalletConnectProvider({\n        ...this.options,\n        chainId,\n        rpc: {\n          ...rpc,\n          ...this.options?.rpc\n        },\n        session: session ? session : undefined\n      }));\n    }\n    return _classPrivateFieldGet(this, _provider);\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider({\n      chainId\n    }), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    try {\n      const account = await this.getAccount();\n      return !!account;\n    } catch {\n      return false;\n    }\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const chainIdHex = utils.hexValue(chainId);\n    try {\n      // Set up a race between `wallet_switchEthereumChain` & the `chainChanged` event\n      // to ensure the chain has been switched. This is because there could be a case\n      // where a wallet may not resolve the `wallet_switchEthereumChain` method, or\n      // resolves slower than `chainChanged`.\n      await Promise.race([provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: chainIdHex\n        }]\n      }), new Promise(res => this.on(\"change\", _ref => {\n        let {\n          chain\n        } = _ref;\n        if (chain?.id === chainId) {\n          res(chainId);\n        }\n      }))]);\n      return this.chains.find(x => x.chainId === chainId) ?? {\n        chainId: chainId,\n        name: `Chain ${chainIdHex}`,\n        network: `${chainIdHex}`,\n        nativeCurrency: {\n          name: \"Ether\",\n          decimals: 18,\n          symbol: \"ETH\"\n        },\n        rpc: [\"\"],\n        shortName: \"eth\",\n        chain: \"ETH\",\n        slug: \"ethereum\",\n        testnet: false\n      };\n    } catch (error) {\n      const message = typeof error === \"string\" ? error : error?.message;\n      if (/user rejected request/i.test(message)) {\n        throw new UserRejectedRequestError(error);\n      }\n      const chain = this.chains.find(x => x.chainId === chainId);\n\n      // if chain is not supported\n      if (!chain) {\n        throw new SwitchChainError(`Chain ${chainId} is not added in the list of supported chains`);\n      }\n\n      // if chain is not configured in the wallet\n      if (/Unrecognized chain ID/i.test(message)) {\n        // configure it\n        this.emit(\"message\", {\n          type: \"add_chain\"\n        });\n        const blockExplorerUrls = this.getBlockExplorerUrls(chain);\n        await provider.request({\n          method: \"wallet_addEthereumChain\",\n          params: [{\n            chainId: chainIdHex,\n            chainName: chain.name,\n            nativeCurrency: chain.nativeCurrency,\n            rpcUrls: chain.rpc,\n            blockExplorerUrls\n          }]\n        });\n        return chain;\n      } else {\n        throw new SwitchChainError(error);\n      }\n    }\n  }\n  async setupListeners() {\n    if (!_classPrivateFieldGet(this, _provider)) {\n      return;\n    }\n    _classPrivateFieldGet(this, _provider).on(\"accountsChanged\", this.onAccountsChanged);\n    _classPrivateFieldGet(this, _provider).on(\"chainChanged\", this.onChainChanged);\n    _classPrivateFieldGet(this, _provider).on(\"disconnect\", this.onDisconnect);\n    _classPrivateFieldGet(this, _provider).on(\"message\", this.onMessage);\n    _classPrivateFieldGet(this, _provider).on(\"switchChain\", this.onSwitchChain);\n    _classPrivateFieldGet(this, _provider).on(\"display_uri\", this.onDisplayUri);\n    _classPrivateFieldGet(this, _provider).on(\"call_request_sent\", this.onRequestSent);\n  }\n}\nasync function _handleConnected2() {\n  const session = _classPrivateFieldGet(this, _provider)?.connector.session;\n  this.walletName = session?.peerMeta?.name || \"\";\n  const sessionStr = JSON.stringify(session);\n  _classPrivateFieldGet(this, _storage).setItem(LAST_SESSION, sessionStr);\n}\nfunction _removeListeners2() {\n  if (!_classPrivateFieldGet(this, _provider)) {\n    return;\n  }\n  _classPrivateFieldGet(this, _provider).removeListener(\"accountsChanged\", this.onAccountsChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"chainChanged\", this.onChainChanged);\n  _classPrivateFieldGet(this, _provider).removeListener(\"disconnect\", this.onDisconnect);\n  _classPrivateFieldGet(this, _provider).removeListener(\"message\", this.onMessage);\n  _classPrivateFieldGet(this, _provider).removeListener(\"switchChain\", this.onSwitchChain);\n  _classPrivateFieldGet(this, _provider).removeListener(\"display_uri\", this.onDisplayUri);\n  _classPrivateFieldGet(this, _provider).removeListener(\"call_request_sent\", this.onRequestSent);\n}\n\nexport { WalletConnectV1Connector };\n"],"names":["WagmiConnector","_EventEmitter","_inherits","_super","_createSuper","_ref","_this","_classCallCheck","_ref$chains","chains","defaultChains","options","call","_defineProperty","_assertThisInitialized","_createClass","key","value","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","chainId","this","some","EventEmitter","RpcError","_Error","message","cause","code","data","Number","isInteger","Error","_wrapNativeSuper","ProviderRpcError","_RpcError","_super2","AddChainError","_Error2","_super3","_this2","apply","arguments","ChainNotConfiguredError","_Error3","_super4","_this3","connectorId","concat","ConnectorNotFoundError","_Error4","_super5","_this4","ResourceUnavailableError","_RpcError2","_super6","_this5","SwitchChainError","_ProviderRpcError","_super7","_this6","UserRejectedRequestError","_ProviderRpcError2","_super8","_this7","normalizeChainId","parseInt","trim","substring","LAST_USED_CHAIN_ID","LAST_SESSION","_provider","WeakMap","_storage","_handleConnected","WeakSet","_removeListeners","WalletConnectV1Connector","_WagmiConnector","config","_classPrivateMethodInitSpec","walletIds","_classPrivateFieldInitSpec","writable","emit","type","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","error","payload","wrap","_context","prev","next","params","stop","_x","_x2","accounts","account","utils","id","unsupported","isChainUnsupported","_classPrivateFieldGet","setItem","String","_callee2","_context2","walletName","removeItem","_classPrivateMethodGet","_removeListeners2","_classPrivateFieldSet","storage","_connect","_callee3","_provider$connector$p","_provider$connector","_provider$connector$p2","targetChainId","lastUsedChainIdStr","lastUsedChainId","provider","_args3","_context3","getItem","sent","getProvider","create","setupListeners","setTimeout","enable","getChainId","connector","peerMeta","name","switchChain","t0","console","_handleConnected2","abrupt","providers","t1","test","_disconnect","_callee4","_context4","disconnect","_getAccount","_callee5","_context5","_getChainId","_callee6","_context6","_getProvider","_callee7","_ref5","_this$options","_session$peerMeta","_this$options2","rpc","WalletConnectProvider","sessionStr","session","_args7","_context7","infuraId","reduce","rpc_","_objectSpread","_defineProperty2","default","JSON","parse","_getSigner","_callee8","_yield$Promise$all","_yield$Promise$all2","_args8","_context8","Promise","all","getAccount","_slicedToArray","getSigner","_isAuthorized","_callee9","_context9","_switchChain","_callee10","chainIdHex","_this$chains$find","blockExplorerUrls","_context10","race","request","method","res","on","find","network","nativeCurrency","decimals","symbol","shortName","slug","testnet","getBlockExplorerUrls","chainName","rpcUrls","_x3","_setupListeners","_callee11","_context11","onAccountsChanged","onChainChanged","onDisconnect","onMessage","onSwitchChain","onDisplayUri","onRequestSent","_handleConnected3","_callee12","_classPrivateFieldGet2","_session$peerMeta2","_context12","stringify","removeListener"],"sourceRoot":""}